<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redobj.repository.core.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.redobj.repository.web.bean.Goods">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="CHAR" property="goodsName" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="goods_con" jdbcType="VARCHAR" property="goodsCon" />
    <result column="goods_env" jdbcType="INTEGER" property="goodsEnv" />
    <result column="goods_date" jdbcType="TIMESTAMP" property="goodsDate" />
    <result column="goods_note" jdbcType="VARCHAR" property="goodsNote" />
  </resultMap>
  <resultMap id="WithEnvResultMap" type="com.redobj.repository.web.bean.Goods">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="CHAR" property="goodsName" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="goods_con" jdbcType="VARCHAR" property="goodsCon" />
    <result column="goods_env" jdbcType="INTEGER" property="goodsEnv" />
    <result column="goods_date" jdbcType="TIMESTAMP" property="goodsDate" />
    <result column="goods_note" jdbcType="VARCHAR" property="goodsNote" />
    <association property="environment" javaType="com.redobj.repository.web.bean.Environment">
      <result column="environment_name" property="environmentName" jdbcType="CHAR"/>
      <result column="temperature" jdbcType="DOUBLE" property="temperature"/>
      <result column="humidity" jdbcType="DOUBLE" property="humidity"/>
      <result column="sun" jdbcType="DOUBLE" property="sun"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_stock, goods_con, goods_env, goods_date, goods_note
  </sql>
  <sql id="WithEnv_Column_List">
    goods_id, goods_name, goods_stock, goods_con, goods_env, goods_date, goods_note,environment_name,temperature,humidity,sun  </sql>
  <select id="selectByExample" parameterType="com.redobj.repository.web.bean.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithEnv" parameterType="com.redobj.repository.web.bean.GoodsExample" resultMap="WithEnvResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithEnv_Column_List" />
    from goods left join environment on goods.goods_env=environment.environment_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithEnv" parameterType="java.lang.Integer" resultMap="WithEnvResultMap">
    select
    <include refid="WithEnv_Column_List" />
    from goods left join environment on goods.goods_env=environment.environment_id
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.redobj.repository.web.bean.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.redobj.repository.web.bean.Goods">
    insert into goods (goods_id, goods_name, goods_stock, 
      goods_con, goods_env, goods_date, 
      goods_note)
    values (#{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=CHAR}, #{goodsStock,jdbcType=INTEGER}, 
      #{goodsCon,jdbcType=VARCHAR}, #{goodsEnv,jdbcType=INTEGER}, #{goodsDate,jdbcType=TIMESTAMP}, 
      #{goodsNote,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.redobj.repository.web.bean.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsStock != null">
        goods_stock,
      </if>
      <if test="goodsCon != null">
        goods_con,
      </if>
      <if test="goodsEnv != null">
        goods_env,
      </if>
      <if test="goodsDate != null">
        goods_date,
      </if>
      <if test="goodsNote != null">
        goods_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=CHAR},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="goodsCon != null">
        #{goodsCon,jdbcType=VARCHAR},
      </if>
      <if test="goodsEnv != null">
        #{goodsEnv,jdbcType=INTEGER},
      </if>
      <if test="goodsDate != null">
        #{goodsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsNote != null">
        #{goodsNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.redobj.repository.web.bean.GoodsExample" resultType="java.lang.Integer">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=CHAR},
      </if>
      <if test="record.goodsStock != null">
        goods_stock = #{record.goodsStock,jdbcType=INTEGER},
      </if>
      <if test="record.goodsCon != null">
        goods_con = #{record.goodsCon,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsEnv != null">
        goods_env = #{record.goodsEnv,jdbcType=INTEGER},
      </if>
      <if test="record.goodsDate != null">
        goods_date = #{record.goodsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsNote != null">
        goods_note = #{record.goodsNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=CHAR},
      goods_stock = #{record.goodsStock,jdbcType=INTEGER},
      goods_con = #{record.goodsCon,jdbcType=VARCHAR},
      goods_env = #{record.goodsEnv,jdbcType=INTEGER},
      goods_date = #{record.goodsDate,jdbcType=TIMESTAMP},
      goods_note = #{record.goodsNote,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.redobj.repository.web.bean.Goods">
    update goods
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=CHAR},
      </if>
      <if test="goodsStock != null">
        goods_stock = #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="goodsCon != null">
        goods_con = #{goodsCon,jdbcType=VARCHAR},
      </if>
      <if test="goodsEnv != null">
        goods_env = #{goodsEnv,jdbcType=INTEGER},
      </if>
      <if test="goodsDate != null">
        goods_date = #{goodsDate,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsNote != null">
        goods_note = #{goodsNote,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.redobj.repository.web.bean.Goods">
    update goods
    set goods_name = #{goodsName,jdbcType=CHAR},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      goods_con = #{goodsCon,jdbcType=VARCHAR},
      goods_env = #{goodsEnv,jdbcType=INTEGER},
      goods_date = #{goodsDate,jdbcType=TIMESTAMP},
      goods_note = #{goodsNote,jdbcType=VARCHAR}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>

</mapper>