package com.redobj.repository.core.bean;

import java.util.ArrayList;
import java.util.List;

public class ContainerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public ContainerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andContainerIdIsNull() {
            addCriterion("container_id is null");
            return (Criteria) this;
        }

        public Criteria andContainerIdIsNotNull() {
            addCriterion("container_id is not null");
            return (Criteria) this;
        }

        public Criteria andContainerIdEqualTo(Integer value) {
            addCriterion("container_id =", value, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdNotEqualTo(Integer value) {
            addCriterion("container_id <>", value, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdGreaterThan(Integer value) {
            addCriterion("container_id >", value, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("container_id >=", value, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdLessThan(Integer value) {
            addCriterion("container_id <", value, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdLessThanOrEqualTo(Integer value) {
            addCriterion("container_id <=", value, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdIn(List<Integer> values) {
            addCriterion("container_id in", values, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdNotIn(List<Integer> values) {
            addCriterion("container_id not in", values, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdBetween(Integer value1, Integer value2) {
            addCriterion("container_id between", value1, value2, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("container_id not between", value1, value2, "containerId");
            return (Criteria) this;
        }

        public Criteria andContainerNameIsNull() {
            addCriterion("container_name is null");
            return (Criteria) this;
        }

        public Criteria andContainerNameIsNotNull() {
            addCriterion("container_name is not null");
            return (Criteria) this;
        }

        public Criteria andContainerNameEqualTo(String value) {
            addCriterion("container_name =", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameNotEqualTo(String value) {
            addCriterion("container_name <>", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameGreaterThan(String value) {
            addCriterion("container_name >", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameGreaterThanOrEqualTo(String value) {
            addCriterion("container_name >=", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameLessThan(String value) {
            addCriterion("container_name <", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameLessThanOrEqualTo(String value) {
            addCriterion("container_name <=", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameLike(String value) {
            addCriterion("container_name like", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameNotLike(String value) {
            addCriterion("container_name not like", value, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameIn(List<String> values) {
            addCriterion("container_name in", values, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameNotIn(List<String> values) {
            addCriterion("container_name not in", values, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameBetween(String value1, String value2) {
            addCriterion("container_name between", value1, value2, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerNameNotBetween(String value1, String value2) {
            addCriterion("container_name not between", value1, value2, "containerName");
            return (Criteria) this;
        }

        public Criteria andContainerUsedIsNull() {
            addCriterion("container_used is null");
            return (Criteria) this;
        }

        public Criteria andContainerUsedIsNotNull() {
            addCriterion("container_used is not null");
            return (Criteria) this;
        }

        public Criteria andContainerUsedEqualTo(Integer value) {
            addCriterion("container_used =", value, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedNotEqualTo(Integer value) {
            addCriterion("container_used <>", value, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedGreaterThan(Integer value) {
            addCriterion("container_used >", value, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedGreaterThanOrEqualTo(Integer value) {
            addCriterion("container_used >=", value, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedLessThan(Integer value) {
            addCriterion("container_used <", value, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedLessThanOrEqualTo(Integer value) {
            addCriterion("container_used <=", value, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedIn(List<Integer> values) {
            addCriterion("container_used in", values, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedNotIn(List<Integer> values) {
            addCriterion("container_used not in", values, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedBetween(Integer value1, Integer value2) {
            addCriterion("container_used between", value1, value2, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerUsedNotBetween(Integer value1, Integer value2) {
            addCriterion("container_used not between", value1, value2, "containerUsed");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityIsNull() {
            addCriterion("container_capacity is null");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityIsNotNull() {
            addCriterion("container_capacity is not null");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityEqualTo(Integer value) {
            addCriterion("container_capacity =", value, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityNotEqualTo(Integer value) {
            addCriterion("container_capacity <>", value, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityGreaterThan(Integer value) {
            addCriterion("container_capacity >", value, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityGreaterThanOrEqualTo(Integer value) {
            addCriterion("container_capacity >=", value, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityLessThan(Integer value) {
            addCriterion("container_capacity <", value, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityLessThanOrEqualTo(Integer value) {
            addCriterion("container_capacity <=", value, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityIn(List<Integer> values) {
            addCriterion("container_capacity in", values, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityNotIn(List<Integer> values) {
            addCriterion("container_capacity not in", values, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityBetween(Integer value1, Integer value2) {
            addCriterion("container_capacity between", value1, value2, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerCapacityNotBetween(Integer value1, Integer value2) {
            addCriterion("container_capacity not between", value1, value2, "containerCapacity");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentIsNull() {
            addCriterion("container_environment is null");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentIsNotNull() {
            addCriterion("container_environment is not null");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentEqualTo(Integer value) {
            addCriterion("container_environment =", value, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentNotEqualTo(Integer value) {
            addCriterion("container_environment <>", value, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentGreaterThan(Integer value) {
            addCriterion("container_environment >", value, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentGreaterThanOrEqualTo(Integer value) {
            addCriterion("container_environment >=", value, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentLessThan(Integer value) {
            addCriterion("container_environment <", value, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentLessThanOrEqualTo(Integer value) {
            addCriterion("container_environment <=", value, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentIn(List<Integer> values) {
            addCriterion("container_environment in", values, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentNotIn(List<Integer> values) {
            addCriterion("container_environment not in", values, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentBetween(Integer value1, Integer value2) {
            addCriterion("container_environment between", value1, value2, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerEnvironmentNotBetween(Integer value1, Integer value2) {
            addCriterion("container_environment not between", value1, value2, "containerEnvironment");
            return (Criteria) this;
        }

        public Criteria andContainerNoteIsNull() {
            addCriterion("container_note is null");
            return (Criteria) this;
        }

        public Criteria andContainerNoteIsNotNull() {
            addCriterion("container_note is not null");
            return (Criteria) this;
        }

        public Criteria andContainerNoteEqualTo(String value) {
            addCriterion("container_note =", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteNotEqualTo(String value) {
            addCriterion("container_note <>", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteGreaterThan(String value) {
            addCriterion("container_note >", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteGreaterThanOrEqualTo(String value) {
            addCriterion("container_note >=", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteLessThan(String value) {
            addCriterion("container_note <", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteLessThanOrEqualTo(String value) {
            addCriterion("container_note <=", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteLike(String value) {
            addCriterion("container_note like", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteNotLike(String value) {
            addCriterion("container_note not like", value, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteIn(List<String> values) {
            addCriterion("container_note in", values, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteNotIn(List<String> values) {
            addCriterion("container_note not in", values, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteBetween(String value1, String value2) {
            addCriterion("container_note between", value1, value2, "containerNote");
            return (Criteria) this;
        }

        public Criteria andContainerNoteNotBetween(String value1, String value2) {
            addCriterion("container_note not between", value1, value2, "containerNote");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table container
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 18 14:58:56 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table container
     *
     * @mbggenerated Thu Jan 18 14:58:56 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}